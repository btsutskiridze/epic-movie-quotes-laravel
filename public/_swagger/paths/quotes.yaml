paths:
  /quotes:
    get:
      tags:
        - Quotes
      security:
        - bearerAuth: []
      summary: Get all the Quotes
      responses:
        "200":
          $ref: "../responses/quotes.yaml#/components/responses/quotes/200"
  /quotes/search:
    post:
      tags:
        - Quotes
      security:
        - bearerAuth: []
      summary: returns searched quotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                search:
                  type: string
                  example: "enww"
      responses:
        "200":
          $ref: "../responses/quotes.yaml#/components/responses/quotes/200"

  /number-quotes:
    post:
      tags:
        - Quotes
      security:
        - bearerAuth: []
      summary: returns specific number of quotes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                count:
                  type: number
                  example: 2
      responses:
        "200":
          $ref: "../responses/quotes.yaml#/components/responses/quotes/200"

  /quote/store:
    post:
      tags:
        - Quotes
      security:
        - bearerAuth: []
      summary: stores new quote
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              allOf:
                - $ref: "../schemas/quote.yaml#/components/schemas/Quote-store"
      responses:
        "200":
          $ref: "../responses/quotes.yaml#/components/responses/quotes/200"

  /quote/{id}:
    get:
      tags:
        - Quotes
      security:
        - bearerAuth: []
      summary: get single quote
      parameters:
        - in: path
          allOf:
            - $ref: "../common.yaml#/components/parameters/id"
      responses:
        "200":
          $ref: "../responses/quotes.yaml#/components/responses/quote/200"
    delete:
      tags:
        - Quotes
      security:
        - bearerAuth: []
      summary: delete quote
      parameters:
        - in: path
          allOf:
            - $ref: "../common.yaml#/components/parameters/id"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                movie_id:
                  type: string
                  example: 4
      responses:
        "200":
          $ref: "../responses/movies.yaml#/components/responses/movies/200"

  /quotes/{id}/with-relations:
    get:
      tags:
        - Quotes
      security:
        - bearerAuth: []
      summary: get single quote with relations
      parameters:
        - in: path
          allOf:
            - $ref: "../common.yaml#/components/parameters/id"
      responses:
        "200":
          $ref: "../responses/quotes.yaml#/components/responses/quote/200"

  /quote/{id}/update:
    post:
      tags:
        - Quotes
      security:
        - bearerAuth: []
      summary: update quote
      parameters:
        - in: path
          allOf:
            - $ref: "../common.yaml#/components/parameters/id"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              allOf:
                - $ref: "../schemas/quote.yaml#/components/schemas/Quote-store"
      responses:
        "200":
          $ref: "../responses/movies.yaml#/components/responses/movies/200"
